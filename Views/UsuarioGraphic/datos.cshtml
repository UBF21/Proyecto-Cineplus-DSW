@model IEnumerable<Cineplus_DSW_Proyecto.Models.Usuario>

@{
    ViewData["Title"] = "datos";
}








<div class="row">
    <div class="col-12 mb-3">

        <h1 class="text-center" style="font-size:3rem;"> <span class="badge badge-primary">Cuadro de datos de Comestibles</span></h1>
    </div>

    <div class="col-6 mt-2">

        <h2> <span class="font-weight-bold">Datos del Cuadro Estadístico</span></h2>

        <p class="mt-4">
            <span>
                Este cuadro estadístico permite poder ver un panorama
                de la cantidad de de Tipo de Comestibles que existen en tiempo real,
                de esta manera recopilamos información de esta de los distintos comestibles
                comestibles y sus respectivas cantidad para realizar un registro de la cantidad
                de tipos de comestibles que se esta vendiendo con mas regularidad y así aumentar
                el stock y en caso existe algun comestible el cual su venta tenga bajo rendimiento
                poder optar por reducir el stock y aminorar costos innecesarios con los proveedores.
            </span>
        </p>
    </div>

    <div class="col-6">
        <canvas id="myChart" width="70" height="40"></canvas>
    </div>

    <div class="col-12 mt-2 mb-2">

        <div class="col-12 mt-2 mb-2">

            <h3 class="text-center"> <span class="badge badge-dark" style="font-size:3rem;">Listado de Comestibles</span></h3>
            <form asp-action="datos" asp-controller="UsuarioGraphic" method="get" class="mt-4">

                <div class="row justify-content-center">
                    <div class="col-lg-5">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button class="btn btn-outline-info">Consultar!</button>
                            </span>
                            <select name="tipo" asp-items="@ViewBag.tipos" class="form-control"></select>
                        </div><!-- /input-group -->
                    </div><!-- /.col-lg-6 -->
                </div><!-- /.row -->

            </form>
            <br />
        </div>

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.idUsuario)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.nombre)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.telefono)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.direccion)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.tipoUsuario)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.estado)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.idUsuario)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.telefono)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.direccion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.tipoUsuario)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.estado)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>

</div>


@section Scripts
    {
    <script>


        jQuery.ajax({
            url: '@Url.Action("usuarioDatos","UsuarioGraphic")',
            type: "Get",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                console.log(data);

                var arregloCantidad = [];
                var arregloRol = [];
                for (let i = 0; i < data.length; i++) {
                    arregloCantidad.push(data[i].cantidad)
                    arregloRol.push(data[i].rol)
                }
                console.log(arregloCantidad);
                console.log(arregloRol);



                const ctx = document.getElementById('myChart').getContext('2d');
                const myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: arregloRol,
                        datasets: [{
                            label: '# of Votes',
                            data: arregloCantidad,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.3)',
                                'rgba(54, 162, 235, 0.3)',
                                'rgba(74, 142, 215, 0.3)',
                                'rgba(67, 155, 115, 0.3)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(74, 142, 215, 1)',
                                'rgba(67, 155, 115, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });

            },
            error: function(error) {
                console.log(error)
            }
        });
    </script>
}